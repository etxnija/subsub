name: Flutter CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  verify-conventional-commits:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install Commitlint
      run: |
        npm install --global @commitlint/cli @commitlint/config-conventional
    - name: Check commit messages
      run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  build:
    runs-on: ubuntu-latest
    needs: [verify-conventional-commits]
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.2'
        channel: 'stable'
        cache: true
    - name: Install dependencies
      run: flutter pub get
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
    - name: Analyze project source
      run: flutter analyze
    - name: Run tests
      run: flutter test
    - name: Build APK
      run: flutter build apk --release
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  ios:
    runs-on: macos-latest
    needs: [verify-conventional-commits]
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.2'
        channel: 'stable'
        cache: true
    - name: Install dependencies
      run: flutter pub get
    - name: Build iOS
      run: flutter build ios --release --no-codesign

  release:
    needs: [build, ios]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install semantic-release
      run: |
        npm install --global semantic-release
        npm install --global @semantic-release/git @semantic-release/changelog
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

    # Note: We're not archiving the iOS build since it requires certificates
    # Add signing and TestFlight upload steps when ready for distribution 