// Mocks generated by Mockito 5.4.5 from annotations
// in subsub/test/game_play_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;
import 'package:subsub/models/game.dart' as _i6;
import 'package:subsub/models/player.dart' as _i5;
import 'package:subsub/services/database_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i3.DatabaseService {
  @override
  _i4.Future<_i2.Database> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.getter(#database)),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.getter(#database)),
            ),
          )
          as _i4.Future<_i2.Database>);

  @override
  _i4.Future<void> resetDatabase() =>
      (super.noSuchMethod(
            Invocation.method(#resetDatabase, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> seedTopPlayers([_i2.Database? providedDb]) =>
      (super.noSuchMethod(
            Invocation.method(#seedTopPlayers, [providedDb]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<int> insert(String? table, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#insert, [table, data]),
            returnValue: _i4.Future<int>.value(0),
            returnValueForMissingStub: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getAll(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#getAll, [table]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
            returnValueForMissingStub:
                _i4.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[],
                ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<Map<String, dynamic>?> getById(String? table, String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getById, [table, id]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
            returnValueForMissingStub:
                _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<int> update(
    String? table,
    Map<String, dynamic>? data,
    String? where,
    List<Object>? whereArgs,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table, data, where, whereArgs]),
            returnValue: _i4.Future<int>.value(0),
            returnValueForMissingStub: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> delete(
    String? table,
    String? where,
    List<Object>? whereArgs,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table, where, whereArgs]),
            returnValue: _i4.Future<int>.value(0),
            returnValueForMissingStub: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> insertPlayer(_i5.Player? player) =>
      (super.noSuchMethod(
            Invocation.method(#insertPlayer, [player]),
            returnValue: _i4.Future<int>.value(0),
            returnValueForMissingStub: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Player>> getAllPlayers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllPlayers, []),
            returnValue: _i4.Future<List<_i5.Player>>.value(<_i5.Player>[]),
            returnValueForMissingStub: _i4.Future<List<_i5.Player>>.value(
              <_i5.Player>[],
            ),
          )
          as _i4.Future<List<_i5.Player>>);

  @override
  _i4.Future<void> updatePlayer(_i5.Player? player) =>
      (super.noSuchMethod(
            Invocation.method(#updatePlayer, [player]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deletePlayer(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePlayer, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> insertGame(_i6.Game? game) =>
      (super.noSuchMethod(
            Invocation.method(#insertGame, [game]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteGame(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGame, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateGame(_i6.Game? game) =>
      (super.noSuchMethod(
            Invocation.method(#updateGame, [game]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i6.Game?> getGame(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getGame, [id]),
            returnValue: _i4.Future<_i6.Game?>.value(),
            returnValueForMissingStub: _i4.Future<_i6.Game?>.value(),
          )
          as _i4.Future<_i6.Game?>);

  @override
  _i4.Future<List<_i6.Game>> getGames() =>
      (super.noSuchMethod(
            Invocation.method(#getGames, []),
            returnValue: _i4.Future<List<_i6.Game>>.value(<_i6.Game>[]),
            returnValueForMissingStub: _i4.Future<List<_i6.Game>>.value(
              <_i6.Game>[],
            ),
          )
          as _i4.Future<List<_i6.Game>>);
}
